"use strict";(globalThis.webpackChunk_lyrasearch_docs=globalThis.webpackChunk_lyrasearch_docs||[]).push([[1846],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>y});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=n.createContext({}),m=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},p=function(e){var r=m(e.components);return n.createElement(l.Provider,{value:r},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=m(t),u=i,y=c["".concat(l,".").concat(u)]||c[u]||d[u]||a;return t?n.createElement(y,o(o({ref:r},p),{},{components:t})):n.createElement(y,o({ref:r},p))}));function y(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=u;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[c]="string"==typeof e?e:i,o[1]=s;for(var m=2;m<a;m++)o[m]=t[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7086:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>m});var n=t(7462),i=(t(7294),t(3905));const a={sidebar_label:"Simplified Imports",sidebar_position:7},o="Simplified Imports",s={unversionedId:"migration-guide/simplified-imports",id:"migration-guide/simplified-imports",title:"Simplified Imports",description:"Before v0.4.0, Lyra was available both as a CommonJS and an ESM module. This meant that you could import Lyra in two different ways:",source:"@site/docs/02-migration-guide/07-simplified-imports.md",sourceDirName:"02-migration-guide",slug:"/migration-guide/simplified-imports",permalink:"/migration-guide/simplified-imports",draft:!1,editUrl:"https://github.com/lyrasearch/docs/tree/main/docs/02-migration-guide/07-simplified-imports.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_label:"Simplified Imports",sidebar_position:7},sidebar:"main",previous:{title:"Default IDs",permalink:"/migration-guide/default-ids"},next:{title:"Using TypeScript",permalink:"/migration-guide/using-typescript"}},l={},m=[{value:"Importing Lyra, stemmers, and internals in ESM",id:"importing-lyra-stemmers-and-internals-in-esm",level:2},{value:"Importing Lyra in CommonJS",id:"importing-lyra-in-commonjs",level:2}],p={toc:m};function c(e){let{components:r,...t}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"simplified-imports"},"Simplified Imports"),(0,i.kt)("p",null,"Before ",(0,i.kt)("inlineCode",{parentName:"p"},"v0.4.0"),", Lyra was available both as a CommonJS and an ESM module. This meant that you could import Lyra in two different ways:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'// CommonJS\nconst { search, insert, create } = require("@lyrasearch/lyra");\n\n// ESM\nimport { search, insert, create } from "@lyrasearch/lyra";\n')),(0,i.kt)("p",null,"With ",(0,i.kt)("inlineCode",{parentName:"p"},"v0.4.0"),", Lyra starts a migration into a ",(0,i.kt)("strong",{parentName:"p"},"ESM-first")," library, maintaining backward compatibility with CommonJS, but with a few changes."),(0,i.kt)("p",null,"This simplifies the imports by a lot, and allows us to move faster when providing new features and bug fixes, as well as using the ",(0,i.kt)("inlineCode",{parentName:"p"},'"exports"')," field in ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," to provide a better developer experience."),(0,i.kt)("p",null,"Starting from ",(0,i.kt)("inlineCode",{parentName:"p"},"v0.4.0"),", there are some changes when importing different parts of Lyra."),(0,i.kt)("h2",{id:"importing-lyra-stemmers-and-internals-in-esm"},"Importing Lyra, stemmers, and internals in ESM"),(0,i.kt)("p",null,"Importing Lyra, stemmers, and internals in ESM has become significantly simpler:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},'- import { search, insert, create } from "@lyrasearch/lyra";\n+ import { search, insert, create } from "@lyrasearch/lyra"; // No changes for default Lyra functions\n\n- import { include } from "@lyrasearch/lyra/dist/esm/internals";\n+ import { include } from "@lyrasearch/lyra/internals";\n\n- import { stemmer } from "@lyrasearch/lyra/dist/esm/stemmer/lib/it";\n+ import { stemmer } from "@lyrasearch/lyra/stemmer/it";\n')),(0,i.kt)("h2",{id:"importing-lyra-in-commonjs"},"Importing Lyra in CommonJS"),(0,i.kt)("p",null,"To import Lyra as a CommonJS module, you now need to explicitly import it from the ",(0,i.kt)("inlineCode",{parentName:"p"},"@lyrasearch/lyra/cjs")," subpackage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},'- const { search, insert, create } = require("@lyrasearch/lyra");\n+ const { search, insert, create } = require("@lyrasearch/lyra/cjs");\n\n- const { include } = require("@lyrasearch/lyra/dist/cjs/internals");\n+ const { include } = require("@lyrasearch/lyra/cjs/internals");\n\n- const { stemmer } = require("@lyrasearch/lyra/dist/cjs/stemmer/lib/it");\n+ const { stemmer } = require("@lyrasearch/lyra/cjs/stemmer/it");\n')))}c.isMDXComponent=!0}}]);